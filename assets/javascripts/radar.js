let data = {};
    let features = ["Exposure","Sensitivity","Adaptive Capacity"];
    const featuresImages = ["/assets/images/Picture1.png", "/assets/images/Picture2.png","/assets/images/Picture3.png"]

    features.forEach(f => data[f] = 1 + Math.random() * 8);

    let svg = d3.select("body").append("svg")

    const width = 400
    const height = 400
        
    svg.attr("width", width)
        .attr("height", height)

    let radialScale = d3.scaleLinear()
        .domain([0,10])
        .range([0,150]);
    let ticks = [2,4,6,8,10];

    ticks.forEach(t => {
        svg.append("text")
        .attr("x", (width/2)+5)
        .attr("y", (height/2) - radialScale(t))
        .text(t.toString())

        let line1 = angleToCoordinate((11*Math.PI / 6), t)

        svg.append("text")
        .attr("x", line1.x)
        .attr("y", line1.y)
        .text(t.toString())

        let line2 = angleToCoordinate((7*Math.PI / 6), t)

        svg.append("text")
        .attr("x", line2.x)
        .attr("y", line2.y)
        .text(t.toString())
    });

    function angleToCoordinate(angle, value){
        let x = Math.cos(angle) * radialScale(value);
        let y = Math.sin(angle) * radialScale(value);
        return {"x": (width/2) + x, "y": (height/2) - y};
    }

    ticks.forEach(t => {
        let line1 = angleToCoordinate((11*Math.PI / 6), t)
        svg.append("line")
        .attr("x1", width/2)
        .attr("y1", (height/2) - radialScale(t))
        .attr("x2", line1.x)
        .attr("y2", line1.y)
        .attr("stroke","black")

        let line2 = angleToCoordinate((7*Math.PI / 6), t)
        svg.append("line")
        .attr("x1", width/2)
        .attr("y1", (height/2) - radialScale(t))
        .attr("x2", line2.x)
        .attr("y2", line2.y)
        .attr("stroke","black")

        svg.append("line")
        .attr("x1", line1.x)
        .attr("y1", line1.y)
        .attr("x2", line2.x)
        .attr("y2", line2.y)
        .attr("stroke", "black")
    })

    for (var i = 0; i < features.length; i++) {
        let angle = (Math.PI / 2) + (2 * Math.PI * i / features.length);
        let line_coordinate = angleToCoordinate(angle, 10);
        let label_coordinate = angleToCoordinate(angle, 10.5);
        // //draw axis line
        svg.append("line")
        .attr("x1", width/2)
        .attr("y1", height/2)
        .attr("x2", line_coordinate.x)
        .attr("y2", line_coordinate.y)
        .attr("stroke","black");

        svg.append("image")
        .attr("href", featuresImages[i])
        .attr("height", 50)
        .attr("width", 50)
        .attr("x", label_coordinate.x - 25)
        .attr("y", label_coordinate.y - 15)
    }


let line = d3.line()
    .x(d => d.x)
    .y(d => d.y);

function getPathCoordinates(data_point){
let coordinates = [];
for (var i = 0; i < features.length; i++){
    let ft_name = features[i];
    let angle = (Math.PI / 2) + (2 * Math.PI * i / features.length);
    coordinates.push(angleToCoordinate(angle, data_point[ft_name]));
}
return coordinates;
}


let coordinates = getPathCoordinates(data);

svg.append("path")
.datum(coordinates)
.attr("d",line)
.attr("stroke-width", 3)
.attr("stroke", "purple")
.attr("fill", "purple")
.attr("stroke-opacity", 1)
.attr("opacity", 0.5);